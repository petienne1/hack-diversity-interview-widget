{"ast":null,"code":"import { ofType, combineEpics } from 'redux-observable';\nimport { map, flatMap, startWith, catchError, pluck } from 'rxjs/operators';\nimport { from, of } from 'rxjs';\nimport MessageAPI from './api';\nimport * as MessageActions from './actions';\nimport MessageActionTypes from './actionTypes';\nimport { createBeforeServerMessage } from '../../utils';\n/**************************************************\n********** YOU DON'T NEED TO EDIT THIS FILE *******\n**************************************************/\n\nvar sendMessage = function sendMessage(action$, store$) {\n  return action$.pipe(ofType(MessageActionTypes.SendMessage), pluck('payload'), map(createBeforeServerMessage), flatMap(function (message) {\n    return from(MessageAPI.sendMessage(message)).pipe(flatMap(function (_ref) {\n      var messageFromServer = _ref.messageFromServer;\n      return of(MessageActions.sendMessageSuccess({\n        messageFromServer: messageFromServer\n      }));\n    }), catchError(function (_ref2) {\n      var messageFromServer = _ref2.messageFromServer,\n          error = _ref2.error;\n      return of(MessageActions.sendMessageFailed({\n        messageFromServer: messageFromServer,\n        error: error\n      }));\n    }), startWith(MessageActions.sendMessagePending({\n      message: message\n    })));\n  }));\n};\n\nexport default combineEpics(sendMessage);","map":{"version":3,"sources":["/Users/pierry/Desktop/Web Development/hack-diversity-interview-widget/src/modules/message/epic.js"],"names":["ofType","combineEpics","map","flatMap","startWith","catchError","pluck","from","of","MessageAPI","MessageActions","MessageActionTypes","createBeforeServerMessage","sendMessage","action$","store$","pipe","SendMessage","message","messageFromServer","sendMessageSuccess","error","sendMessageFailed","sendMessagePending"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,kBAArC;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,SAAvB,EAAkCC,UAAlC,EAA8CC,KAA9C,QAA2D,gBAA3D;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,MAAzB;AAEA,OAAOC,UAAP,MAAuB,OAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,WAAhC;AACA,OAAOC,kBAAP,MAA+B,eAA/B;AACA,SAASC,yBAAT,QAA0C,aAA1C;AAGA;;;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,MAAV;AAAA,SAAqBD,OAAO,CAACE,IAAR,CACvChB,MAAM,CAACW,kBAAkB,CAACM,WAApB,CADiC,EAEvCX,KAAK,CAAC,SAAD,CAFkC,EAGvCJ,GAAG,CAACU,yBAAD,CAHoC,EAIvCT,OAAO,CAAC,UAACe,OAAD,EAAa;AACnB,WAAOX,IAAI,CAACE,UAAU,CAACI,WAAX,CAAuBK,OAAvB,CAAD,CAAJ,CACJF,IADI,CAEHb,OAAO,CAAC,gBAA2B;AAAA,UAAxBgB,iBAAwB,QAAxBA,iBAAwB;AACjC,aAAOX,EAAE,CAACE,cAAc,CAACU,kBAAf,CAAkC;AAAED,QAAAA,iBAAiB,EAAjBA;AAAF,OAAlC,CAAD,CAAT;AACD,KAFM,CAFJ,EAKHd,UAAU,CAAC,iBAAkC;AAAA,UAA/Bc,iBAA+B,SAA/BA,iBAA+B;AAAA,UAAZE,KAAY,SAAZA,KAAY;AAC3C,aAAOb,EAAE,CAACE,cAAc,CAACY,iBAAf,CAAiC;AAAEH,QAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBE,QAAAA,KAAK,EAALA;AAArB,OAAjC,CAAD,CAAT;AACD,KAFS,CALP,EAQHjB,SAAS,CAACM,cAAc,CAACa,kBAAf,CAAkC;AAAEL,MAAAA,OAAO,EAAPA;AAAF,KAAlC,CAAD,CARN,CAAP;AAUD,GAXM,CAJgC,CAArB;AAAA,CAApB;;AAkBA,eAAejB,YAAY,CACzBY,WADyB,CAA3B","sourcesContent":["import { ofType, combineEpics } from 'redux-observable';\nimport { map, flatMap, startWith, catchError, pluck } from 'rxjs/operators';\nimport { from, of } from 'rxjs';\n\nimport MessageAPI from './api';\nimport * as MessageActions from './actions';\nimport MessageActionTypes from './actionTypes';\nimport { createBeforeServerMessage } from '../../utils';\n\n\n/**************************************************\n********** YOU DON'T NEED TO EDIT THIS FILE *******\n**************************************************/\n\n\n\nconst sendMessage = (action$, store$) => action$.pipe(\n  ofType(MessageActionTypes.SendMessage),\n  pluck('payload'),\n  map(createBeforeServerMessage),\n  flatMap((message) => {\n    return from(MessageAPI.sendMessage(message))\n      .pipe(\n        flatMap(({ messageFromServer }) => {\n          return of(MessageActions.sendMessageSuccess({ messageFromServer }));\n        }),\n        catchError(({ messageFromServer, error }) => {\n          return of(MessageActions.sendMessageFailed({ messageFromServer, error }));\n        }),\n        startWith(MessageActions.sendMessagePending({ message })),\n      )\n  })\n)\n\nexport default combineEpics(\n  sendMessage,\n)\n"]},"metadata":{},"sourceType":"module"}